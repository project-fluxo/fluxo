
!definitions for inner sphere block
DEFVAR=(INT):    i0 = 001    ! no. elems in inner cube  i0xi0xi0
DEFVAR=(INT):    ir1 = 001    ! no. elems in r inside 
DEFVAR=(INT):    ir2 = 001    ! no. elems in r outside
DEFVAR=(INT):    ir3 = 001    ! no. elems in r in xy blocks outside
DEFVAR=(INT):    iz1 = 1 ! no. elems in z in lower/upper layer
DEFVAR=(REAL):   ri = 0.5    ! inner square dim
DEFVAR=(REAL):   rc = 1.     ! central square dim
DEFVAR=(REAL):   r0 = 2.     ! outer square dim
DEFVAR=(REAL):   fac_r1 = 1.5 !2     ! inner ring outward stretching(sphere) 
DEFVAR=(REAL):   fac_r2 = 1.2     ! outer ring inward stretching (sphere) 
DEFVAR=(REAL):   fac_r3 = 1.4     ! outer block inward stretching 
DEFVAR=(REAL):   fac_zz = 1.08     ! outer block  stretching in +/-z

!definitions for outer blocks
DEFVAR=(REAL): glob_out=5.0
DEFVAR=(REAL):  xma= -glob_out !outer box pos in x-
DEFVAR=(REAL):  xmi= -r0       !inner box pos in x-
DEFVAR=(REAL):  xpi=  r0       !inner box pos in x+
DEFVAR=(REAL):  xpa= 5.0 !outer box pos in x+

DEFVAR=(REAL):  xtma=  -5.00 !tilded outer box pos in x-
DEFVAR=(REAL):  xtmi=  -2.50   !tilded inner box pos in x-
DEFVAR=(REAL):  xtpi=   2.50   !tilded inner box pos in x+ (=xtmi+2*r0)
DEFVAR=(REAL):  xtpa=   5.00  !tilded outer box pos in x+

DEFVAR=(REAL):  yma= -glob_out
DEFVAR=(REAL):  ymi= -r0
DEFVAR=(REAL):  ypi=  r0
DEFVAR=(REAL):  ypa=  glob_out

DEFVAR=(REAL):  zma  =  -5.00
DEFVAR=(REAL):  zmi   = -r0
DEFVAR=(REAL):  zpi   =  r0
DEFVAR=(REAL):  zpa  =   5.00
 
!---
DEFVAR=(REAL~3): c111=  xtma, yma , zma   !xyz poisiton of corners
DEFVAR=(REAL~3): c411=  xtpa, yma , zma

DEFVAR=(REAL~3): c221 =  xtmi , ymi, zma
DEFVAR=(REAL~3): c321 =  xtpi , ymi, zma

DEFVAR=(REAL~3): c231 =  xtmi ,  ypi, zma
DEFVAR=(REAL~3): c331 =  xtpi ,  ypi, zma

DEFVAR=(REAL~3): c141 =  xtma ,  ypa, zma     
DEFVAR=(REAL~3): c441 =  xtpa ,  ypa, zma
!---
DEFVAR=(REAL~3): c112 =  xma , yma, zmi  
DEFVAR=(REAL~3): c412 =  xpa , yma, zmi

DEFVAR=(REAL~3): c222 =  xmi , ymi, zmi
DEFVAR=(REAL~3): c322 =  xpi , ymi, zmi

DEFVAR=(REAL~3): c232 =  xmi ,  ypi, zmi
DEFVAR=(REAL~3): c332 =  xpi ,  ypi, zmi

DEFVAR=(REAL~3): c142 =  xma ,  ypa, zmi     
DEFVAR=(REAL~3): c442 =  xpa ,  ypa, zmi
!---
DEFVAR=(REAL~3): c113 =  xma , yma,  zpi  
DEFVAR=(REAL~3): c413 =  xpa , yma,  zpi

DEFVAR=(REAL~3): c223 =  xmi , ymi,  zpi
DEFVAR=(REAL~3): c323 =  xpi , ymi,  zpi

DEFVAR=(REAL~3): c233 =  xmi ,  ypi,  zpi
DEFVAR=(REAL~3): c333 =  xpi ,  ypi,  zpi

DEFVAR=(REAL~3): c143 =  xma ,  ypa,  zpi     
DEFVAR=(REAL~3): c443 =  xpa ,  ypa,  zpi
!---
DEFVAR=(REAL~3): c114 =  xtma , yma,  zpa  
DEFVAR=(REAL~3): c414 =  xtpa , yma,  zpa

DEFVAR=(REAL~3): c224 =  xtmi , ymi,  zpa
DEFVAR=(REAL~3): c324 =  xtpi , ymi,  zpa

DEFVAR=(REAL~3): c234 =  xtmi ,  ypi,  zpa
DEFVAR=(REAL~3): c334 =  xtpi ,  ypi,  zpa

DEFVAR=(REAL~3): c144 =  xtma ,  ypa,  zpa     
DEFVAR=(REAL~3): c444 =  xtpa ,  ypa,  zpa



!================================================================================================================================= !
! OUTPUT
!================================================================================================================================= !
  ProjectName  = ConformBoxUnstruct2_Ngeo2  ! Name of output files
  Debugvisu    = T                          ! Visualize mesh and boundary conditions (tecplot ascii)
  DebugVisuLevel=2
  checkElemJacobians=T
  nVisu = 6 
  useCurveds   =T 
  BoundaryOrder=3
!================================================================================================================================= !
! MESH
!================================================================================================================================= !
  Mode         =1                           ! Mode for Cartesian boxes
  nZones       =27                          ! number of boxes

sphblk_cent%  Corner       =(/-ri,-ri,-ri ,,ri,-ri,-ri ,,ri,ri,-ri ,,  -ri,ri,-ri,, -ri,-ri,ri ,,ri,-ri,ri ,,ri,ri,ri ,,  -ri,ri,ri /)
sphblk_cent%  nElems       =(/i0,i0,i0/)                   ! number of elements in each direction
sphblk_cent%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_cent%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_cent%  factor       =(/1.,1.,1./)

sphblk_in_xm%  Corner       =(/-rc,-rc,-rc ,,-ri,-ri,-ri ,,-ri,ri,-ri ,,  -rc,rc,-rc,, -rc,-rc,rc ,,-ri,-ri,ri ,,-ri,ri,ri ,,  -rc,rc,rc /)
sphblk_in_xm%  nElems       =(/ir1,i0,i0/)                   ! number of elements in each direction
sphblk_in_xm%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_in_xm%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_in_xm%  factor       =(/fac_r1,1.,1./)

sphblk_in_xp%  Corner       =(/ri,-ri,-ri ,,rc,-rc,-rc ,,rc,rc,-rc ,,  ri,ri,-ri,, ri,-ri,ri ,,rc,-rc,rc ,,rc,rc,rc ,,  ri,ri,ri /)
sphblk_in_xp%  nElems       =(/ir1,i0,i0/)                   ! number of elements in each direction
sphblk_in_xp%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_in_xp%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_in_xp%  factor       =(/-fac_r1,1.,1./)

sphblk_in_ym%  Corner       =(/-rc,-rc,-rc ,,rc,-rc,-rc ,,ri,-ri,-ri ,,  -ri,-ri,-ri,, -rc,-rc,rc ,,rc,-rc,rc ,,ri,-ri,ri ,,  -ri,-ri,ri /)
sphblk_in_ym%  nElems       =(/i0,ir1,i0/)                   ! number of elements in each direction
sphblk_in_ym%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_in_ym%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_in_ym%  factor       =(/1.,fac_r1,1./)

sphblk_in_yp%  Corner       =(/-ri,ri,-ri ,,ri,ri,-ri ,,rc,rc,-rc ,,  -rc,rc,-rc,, -ri,ri,ri ,,ri,ri,ri ,,rc,rc,rc ,,  -rc,rc,rc /)
sphblk_in_yp%  nElems       =(/i0,ir1,i0/)                   ! number of elements in each direction
sphblk_in_yp%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_in_yp%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_in_yp%  factor       =(/1.,-fac_r1,1./)

sphblk_in_zm%   Corner       =(/-rc,-rc,-rc ,,rc,-rc,-rc ,,rc,rc,-rc ,,  -rc,rc,-rc,, -ri,-ri,-ri ,,ri,-ri,-ri ,,ri,ri,-ri ,,  -ri,ri,-ri/)
sphblk_in_zm%   nElems       =(/i0,i0,ir1/)                   ! number of elements in each direction
sphblk_in_zm%   BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_in_zm%   elemtype     =108                         ! element type (108: Hexahedral)
sphblk_in_zm%  factor       =(/1.,1.,fac_r1/)

sphblk_in_zp%  Corner       =(/ -ri,-ri,ri ,,ri,-ri,ri ,,ri,ri,ri ,,  -ri,ri,ri,, -rc,-rc,rc ,,rc,-rc,rc ,,rc,rc,rc ,,  -rc,rc,rc/)
sphblk_in_zp%  nElems       =(/i0,i0,ir1/)                   ! number of elements in each direction
sphblk_in_zp%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_in_zp%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_in_zp%  factor       =(/1.,1.,-fac_r1/)

sphblk_out_xm%  Corner       =(/-r0,-r0,-r0 ,,-rc,-rc,-rc ,,-rc,rc,-rc ,,  -r0,r0,-r0,, -r0,-r0,r0 ,,-rc,-rc,rc ,,-rc,rc,rc ,,  -r0,r0,r0 /)
sphblk_out_xm%  nElems       =(/ir2,i0,i0/)                   ! number of elements in each direction
sphblk_out_xm%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_out_xm%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_out_xm%  factor       =(/-fac_r2,1.,1./)

sphblk_out_xp%  Corner       =(/rc,-rc,-rc ,,r0,-r0,-r0 ,,r0,r0,-r0 ,,  rc,rc,-rc,, rc,-rc,rc ,,r0,-r0,r0 ,,r0,r0,r0 ,,  rc,rc,rc /)
sphblk_out_xp%  nElems       =(/ir2,i0,i0/)                   ! number of elements in each direction
sphblk_out_xp%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_out_xp%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_out_xp%  factor       =(/fac_r2,1.,1./)

sphblk_out_ym%  Corner       =(/-r0,-r0,-r0 ,,r0,-r0,-r0 ,,rc,-rc,-rc ,,  -rc,-rc,-rc,, -r0,-r0,r0 ,,r0,-r0,r0 ,,rc,-rc,rc ,,  -rc,-rc,rc /)
sphblk_out_ym%  nElems       =(/i0,ir2,i0/)                   ! number of elements in each direction
sphblk_out_ym%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_out_ym%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_out_ym%  factor       =(/1.,-fac_r2,1./)

sphblk_out_yp%  Corner       =(/-rc,rc,-rc ,,rc,rc,-rc ,,r0,r0,-r0 ,,  -r0,r0,-r0,, -rc,rc,rc ,,rc,rc,rc ,,r0,r0,r0 ,,  -r0,r0,r0 /)
sphblk_out_yp%  nElems       =(/i0,ir2,i0/)                   ! number of elements in each direction
sphblk_out_yp%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_out_yp%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_out_yp%  factor       =(/1.,fac_r2,1./)

sphblk_out_zm%  Corner       =(/-r0,-r0,-r0 ,,r0,-r0,-r0 ,,r0,r0,-r0 ,,  -r0,r0,-r0,, -rc,-rc,-rc ,,rc,-rc,-rc ,,rc,rc,-rc ,,  -rc,rc,-rc/)
sphblk_out_zm%  nElems       =(/i0,i0,ir2/)                   ! number of elements in each direction
sphblk_out_zm%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_out_zm%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_out_zm%  factor       =(/1.,1.,-fac_r2/)

sphblk_out_zp%  Corner       =(/ -rc,-rc,rc ,,rc,-rc,rc ,,rc,rc,rc ,,  -rc,rc,rc,, -r0,-r0,r0 ,,r0,-r0,r0 ,,r0,r0,r0 ,,  -r0,r0,r0/)
sphblk_out_zp%  nElems       =(/i0,i0,ir2/)                   ! number of elements in each direction
sphblk_out_zp%  BCIndex      =(/0,0,0,0,0,0/)             ! Indices of Boundary Conditions
sphblk_out_zp%  elemtype     =108                         ! element type (108: Hexahedral)
sphblk_out_zp%  factor       =(/1.,1.,fac_r2/)

!lowest layer [zma,zmi]
block_out_zm_ym%  Corner       =(/c111 ,, c411 ,, c321 ,, c221 ,, c112 ,, c412 ,, c322 ,, c222 /)
block_out_zm_xm%  Corner       =(/c111 ,, c221 ,, c231 ,, c141 ,, c112 ,, c222 ,, c232 ,, c142 /)
block_out_zm_xc%  Corner       =(/c221 ,, c321 ,, c331 ,, c231 ,, c222 ,, c322 ,, c332 ,, c232 /)
block_out_zm_xp%  Corner       =(/c321 ,, c411 ,, c441 ,, c331 ,, c322 ,, c412 ,, c442 ,, c332 /)
block_out_zm_yp%  Corner       =(/c231 ,, c331 ,, c441 ,, c141 ,, c232 ,, c332 ,, c442 ,, c142 /)

block_out_zc_ym%  Corner       =(/c112 ,, c412 ,, c322 ,, c222 ,, c113 ,, c413 ,, c323 ,, c223 /)
block_out_zc_xm%  Corner       =(/c112 ,, c222 ,, c232 ,, c142 ,, c113 ,, c223 ,, c233 ,, c143 /)
block_out_zc_xp%  Corner       =(/c322 ,, c412 ,, c442 ,, c332 ,, c323 ,, c413 ,, c443 ,, c333 /)
block_out_zc_yp%  Corner       =(/c232 ,, c332 ,, c442 ,, c142 ,, c233 ,, c333 ,, c443 ,, c143 /)

block_out_zp_ym%  Corner       =(/c113 ,, c413 ,, c323 ,, c223 ,, c114 ,, c414 ,, c324 ,, c224 /)
block_out_zp_xm%  Corner       =(/c113 ,, c223 ,, c233 ,, c143 ,, c114 ,, c224 ,, c234 ,, c144 /)
block_out_zp_xc%  Corner       =(/c223 ,, c323 ,, c333 ,, c233 ,, c224 ,, c324 ,, c334 ,, c234 /)
block_out_zp_xp%  Corner       =(/c323 ,, c413 ,, c443 ,, c333 ,, c324 ,, c414 ,, c444 ,, c334 /)
block_out_zp_yp%  Corner       =(/c233 ,, c333 ,, c443 ,, c143 ,, c234 ,, c334 ,, c444 ,, c144 /)

block_out_zm_ym%  nElems       =(/i0 ,ir3,iz1/)
block_out_zm_xm%  nElems       =(/ir3,i0 ,iz1/)
block_out_zm_xc%  nElems       =(/i0 ,i0 ,iz1/)
block_out_zm_xp%  nElems       =(/ir3,i0 ,iz1/)
block_out_zm_yp%  nElems       =(/i0 ,ir3,iz1/)

block_out_zc_ym%  nElems       =(/i0 ,ir3,i0/)
block_out_zc_xm%  nElems       =(/ir3,i0 ,i0/)
block_out_zc_xp%  nElems       =(/ir3,i0 ,i0/)
block_out_zc_yp%  nElems       =(/i0 ,ir3,i0/)

block_out_zp_ym%  nElems       =(/i0 ,ir3,iz1/)
block_out_zp_xm%  nElems       =(/ir3,i0 ,iz1/)
block_out_zp_xc%  nElems       =(/i0 ,i0 ,iz1/)
block_out_zp_xp%  nElems       =(/ir3,i0 ,iz1/)
block_out_zp_yp%  nElems       =(/i0 ,ir3,iz1/)

block_out_zm_ym%  BCIndex      =(/1,2,0,0,0,0/)
block_out_zm_xm%  BCIndex      =(/1,0,0,0,5,0/)
block_out_zm_xc%  BCIndex      =(/1,0,0,0,0,0/)
block_out_zm_xp%  BCIndex      =(/1,0,3,0,0,0/)
block_out_zm_yp%  BCIndex      =(/1,0,0,4,0,0/)

block_out_zc_ym%  BCIndex      =(/0,2,0,0,0,0/)
block_out_zc_xm%  BCIndex      =(/0,0,0,0,5,0/)
block_out_zc_xp%  BCIndex      =(/0,0,3,0,0,0/)
block_out_zc_yp%  BCIndex      =(/0,0,0,4,0,0/)

block_out_zp_ym%  BCIndex      =(/0,2,0,0,0,6/)
block_out_zp_xm%  BCIndex      =(/0,0,0,0,5,6/)
block_out_zp_xc%  BCIndex      =(/0,0,0,0,0,6/)
block_out_zp_xp%  BCIndex      =(/0,0,3,0,0,6/)
block_out_zp_yp%  BCIndex      =(/0,0,0,4,0,6/)

block_out_zm_ym%  factor       =(/1.0    ,-fac_r3,-fac_zz/)
block_out_zm_xm%  factor       =(/-fac_r3,    1.0,-fac_zz/)
block_out_zm_xc%  factor       =(/1.0    ,    1.0,-fac_zz/)
block_out_zm_xp%  factor       =(/ fac_r3,    1.0,-fac_zz/)
block_out_zm_yp%  factor       =(/1.0    , fac_r3,-fac_zz/)

block_out_zc_ym%  factor       =(/1.0    ,-fac_r3,1.0/)
block_out_zc_xm%  factor       =(/-fac_r3,    1.0,1.0/)
block_out_zc_xp%  factor       =(/ fac_r3,    1.0,1.0/)
block_out_zc_yp%  factor       =(/1.0    , fac_r3,1.0/)

block_out_zp_ym%  factor       =(/1.0    ,-fac_r3,fac_zz/)
block_out_zp_xm%  factor       =(/-fac_r3,    1.0,fac_zz/)
block_out_zp_xc%  factor       =(/1.0    ,    1.0,fac_zz/)
block_out_zp_xp%  factor       =(/ fac_r3,    1.0,fac_zz/)
block_out_zp_yp%  factor       =(/1.0    , fac_r3,fac_zz/)

block_out_zm_ym%  elemtype     =108 
block_out_zm_xm%  elemtype     =108 
block_out_zm_xc%  elemtype     =108 
block_out_zm_xp%  elemtype     =108 
block_out_zm_yp%  elemtype     =108 

block_out_zc_ym%  elemtype     =108 
block_out_zc_xm%  elemtype     =108 
block_out_zc_xp%  elemtype     =108 
block_out_zc_yp%  elemtype     =108 

block_out_zp_ym%  elemtype     =108 
block_out_zp_xm%  elemtype     =108 
block_out_zp_xc%  elemtype     =108 
block_out_zp_xp%  elemtype     =108 
block_out_zp_yp%  elemtype     =108 
!================================================================================================================================= !
! BOUNDARY CONDITIONS
!================================================================================================================================= !
    BoundaryName=BC_zMINUS                  ! BC index 1 (from  position in parameterfile)
    BoundaryType=(/2,0,0,0/)                ! (/ Type, curveIndex, State, alpha /)
    BoundaryName=BC_yMINUS                  ! BC index 2 ... 
    BoundaryType=(/2,0,0,0/)        
    BoundaryName=BC_xPLUS                   ! BC index 3 
    BoundaryType=(/2,0,0,0/)         
    BoundaryName=BC_yPLUS                   ! BC index 4
    BoundaryType=(/2,0,0,0/)          
    BoundaryName=BC_xMINUS                  ! BC index 5
    BoundaryType=(/2,0,0,0/)           
    BoundaryName=BC_zPLUS                   ! BC index 6
    BoundaryType=(/2,0,0,0/)

!================================================================================================================================= !
! MESH POST DEFORM
!================================================================================================================================= !
MeshPostDeform=4
PostDeform_R0=1.0
postScaleMesh = T
MeshScale=0.3464103230276262
