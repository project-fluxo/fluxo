DEFVAR=(REAL~3):c_mmm1 =-1.,-1.,-1. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_mmm2 = 0.,-1.,-1. 
DEFVAR=(REAL~3):c_mmm3 = 0., 0.,-1.
DEFVAR=(REAL~3):c_mmm4 =-1., 0.,-1.
DEFVAR=(REAL~3):c_mmm5 =-1.,-1.,-0.
DEFVAR=(REAL~3):c_mmm6 = 0.,-1.,-0.
DEFVAR=(REAL~3):c_mmm7 = 0., 0.,-0.
DEFVAR=(REAL~3):c_mmm8 =-1., 0.,-0.
DEFVAR=(REAL~3):c_pmm1 = 0.,-1.,-1. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_pmm2 = 1.,-1.,-1. 
DEFVAR=(REAL~3):c_pmm3 = 1., 0.,-1.
DEFVAR=(REAL~3):c_pmm4 = 0., 0.,-1.
DEFVAR=(REAL~3):c_pmm5 = 0.,-1.,-0.
DEFVAR=(REAL~3):c_pmm6 = 1.,-1.,-0.
DEFVAR=(REAL~3):c_pmm7 = 1., 0.,-0.
DEFVAR=(REAL~3):c_pmm8 = 0., 0.,-0.
DEFVAR=(REAL~3):c_mpm1 =-1., 0.,-1. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_mpm2 = 0., 0.,-1. 
DEFVAR=(REAL~3):c_mpm3 = 0., 1.,-1.
DEFVAR=(REAL~3):c_mpm4 =-1., 1.,-1.
DEFVAR=(REAL~3):c_mpm5 =-1., 0.,-0.
DEFVAR=(REAL~3):c_mpm6 = 0., 0.,-0.
DEFVAR=(REAL~3):c_mpm7 = 0., 1.,-0.
DEFVAR=(REAL~3):c_mpm8 =-1., 1.,-0.
DEFVAR=(REAL~3):c_ppm1 = 0., 0.,-1. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_ppm2 = 1., 0.,-1. 
DEFVAR=(REAL~3):c_ppm3 = 1., 1.,-1.
DEFVAR=(REAL~3):c_ppm4 = 0., 1.,-1.
DEFVAR=(REAL~3):c_ppm5 = 0., 0.,-0.
DEFVAR=(REAL~3):c_ppm6 = 1., 0.,-0.
DEFVAR=(REAL~3):c_ppm7 = 1., 1.,-0.
DEFVAR=(REAL~3):c_ppm8 = 0., 1.,-0.
DEFVAR=(REAL~3):c_mmp1 =-1.,-1., 0. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_mmp2 = 0.,-1., 0. 
DEFVAR=(REAL~3):c_mmp3 = 0., 0., 0.
DEFVAR=(REAL~3):c_mmp4 =-1., 0., 0.
DEFVAR=(REAL~3):c_mmp5 =-1.,-1., 1.
DEFVAR=(REAL~3):c_mmp6 = 0.,-1., 1.
DEFVAR=(REAL~3):c_mmp7 = 0., 0., 1.
DEFVAR=(REAL~3):c_mmp8 =-1., 0., 1.
DEFVAR=(REAL~3):c_pmp1 = 0.,-1., 0. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_pmp2 = 1.,-1., 0. 
DEFVAR=(REAL~3):c_pmp3 = 1., 0., 0.
DEFVAR=(REAL~3):c_pmp4 = 0., 0., 0.
DEFVAR=(REAL~3):c_pmp5 = 0.,-1., 1.
DEFVAR=(REAL~3):c_pmp6 = 1.,-1., 1.
DEFVAR=(REAL~3):c_pmp7 = 1., 0., 1.
DEFVAR=(REAL~3):c_pmp8 = 0., 0., 1.
DEFVAR=(REAL~3):c_mpp1 =-1., 0., 0. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_mpp2 = 0., 0., 0. 
DEFVAR=(REAL~3):c_mpp3 = 0., 1., 0.
DEFVAR=(REAL~3):c_mpp4 =-1., 1., 0.
DEFVAR=(REAL~3):c_mpp5 =-1., 0., 1.
DEFVAR=(REAL~3):c_mpp6 = 0., 0., 1.
DEFVAR=(REAL~3):c_mpp7 = 0., 1., 1.
DEFVAR=(REAL~3):c_mpp8 =-1., 1., 1.
DEFVAR=(REAL~3):c_ppp1 = 0., 0., 0. ! array for outer corner x,y,z coordinate 
DEFVAR=(REAL~3):c_ppp2 = 1., 0., 0. 
DEFVAR=(REAL~3):c_ppp3 = 1., 1., 0.
DEFVAR=(REAL~3):c_ppp4 = 0., 1., 0.
DEFVAR=(REAL~3):c_ppp5 = 0., 0., 1.
DEFVAR=(REAL~3):c_ppp6 = 1., 0., 1.
DEFVAR=(REAL~3):c_ppp7 = 1., 1., 1.
DEFVAR=(REAL~3):c_ppp8 = 0., 1., 1.
DEFVAR=(INT):n_1  = 1    !coarse level
DEFVAR=(INT):n_2  = 2    ! should be = 2*n_1
!================================================================================================================================= !
! OUTPUT
!================================================================================================================================= !
  ProjectName  = CartBoxMortarPeriodic      ! Name of output files
  Debugvisu    = F                              ! Visualize mesh and boundary conditions (tecplot ascii)
  CheckElemJacobians = T 
 
!================================================================================================================================= !
! MESH
!================================================================================================================================= !
  Mode         =1                           ! Mode for Cartesian boxes
  nZones       =8                           ! number of boxes
  ! mmm
  Corner       =(/c_mmm1 ,, c_mmm2 ,, c_mmm3 ,, c_mmm4 ,, c_mmm5 ,, c_mmm6 ,, c_mmm7 ,, c_mmm8 /)
  nElems       =(/n_1,n_2,n_2/)             ! number of elements in each direction
  BCIndex      =(/1,2,0,0,5,0/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! pmm
  Corner       =(/c_pmm1 ,, c_pmm2 ,, c_pmm3 ,, c_pmm4 ,, c_pmm5 ,, c_pmm6 ,, c_pmm7 ,, c_pmm8 /)
  nElems       =(/n_2,n_1,n_1/)             ! number of elements in each direction
  BCIndex      =(/1,2,3,0,0,0/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! mpm
  Corner       =(/c_mpm1 ,, c_mpm2 ,, c_mpm3 ,, c_mpm4 ,, c_mpm5 ,, c_mpm6 ,, c_mpm7 ,, c_mpm8 /)
  nElems       =(/n_1,n_1,n_1/)             ! number of elements in each direction
  BCIndex      =(/1,0,0,4,5,0/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! ppm
  Corner       =(/c_ppm1 ,, c_ppm2 ,, c_ppm3 ,, c_ppm4 ,, c_ppm5 ,, c_ppm6 ,, c_ppm7 ,, c_ppm8 /)
  nElems       =(/n_2,n_2,n_2/)             ! number of elements in each direction
  BCIndex      =(/1,0,3,4,0,0/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! mmp
  Corner       =(/c_mmp1 ,, c_mmp2 ,, c_mmp3 ,, c_mmp4 ,, c_mmp5 ,, c_mmp6 ,, c_mmp7 ,, c_mmp8 /)
  nElems       =(/n_1,n_2,n_2/)             ! number of elements in each direction
  BCIndex      =(/0,2,0,0,5,6/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! pmp
  Corner       =(/c_pmp1 ,, c_pmp2 ,, c_pmp3 ,, c_pmp4 ,, c_pmp5 ,, c_pmp6 ,, c_pmp7 ,, c_pmp8 /)
  nElems       =(/n_2,n_2,n_1/)             ! number of elements in each direction
  BCIndex      =(/0,2,3,0,0,6/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! mpp
  Corner       =(/c_mpp1 ,, c_mpp2 ,, c_mpp3 ,, c_mpp4 ,, c_mpp5 ,, c_mpp6 ,, c_mpp7 ,, c_mpp8 /)
  nElems       =(/n_1,n_1,n_1/)             ! number of elements in each direction
  BCIndex      =(/0,0,0,4,5,6/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  ! ppp
  Corner       =(/c_ppp1 ,, c_ppp2 ,, c_ppp3 ,, c_ppp4 ,, c_ppp5 ,, c_ppp6 ,, c_ppp7 ,, c_ppp8 /)
  nElems       =(/n_1,n_1,n_1/)             ! number of elements in each direction
  BCIndex      =(/0,0,3,4,0,6/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)

  nvv=3
  vv=(/2.,0.,0./)
  vv=(/0.,2.,0./)
  vv=(/0.,0.,2./)
 
  UseCurveds   =F
  BoundaryOrder=2

  MeshPostDeform = 0 !sinusodial deformation 
  doRebuildMortarGeometry=T !needed for postdeform
!================================================================================================================================= !
! BOUNDARY CONDITIONS
!================================================================================================================================= !
  BoundaryName=BC_z-  ! BCindex=1
  BoundaryType=(/1,0,0,3/) 
  BoundaryName=BC_y-  ! BCindex=2
  BoundaryType=(/1,0,0,2/) 
  BoundaryName=BC_x+  ! BCindex=3
  BoundaryType=(/1,0,0,-1/) 
  BoundaryName=BC_y+  ! BCindex=4
  BoundaryType=(/1,0,0,-2/) 
  BoundaryName=BC_x-  ! BCindex=5
  BoundaryType=(/1,0,0,1/) 
  BoundaryName=BC_z+  ! BCindex=6
  BoundaryType=(/1,0,0,-3/) 
